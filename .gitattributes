import tkinter as tk

class Begin(tk.Frame):
	def __init__(self):
		tk.Frame.__init__(self)
		self.grid()
		self.create_widgets()
		
	def create_widgets(self):
		self.lb1 = tk.Label(self, height=1, width=40, text='GUY1')
		self.lb2 = tk.Label(self, height=1, width=40, text='name1:')
		self.lb3 = tk.Label(self, height=1, width=40, text='token1:')
		self.lb4 = tk.Label(self, height=1, width=40, text='GUY2')
		self.lb5 = tk.Label(self, height=1, width=40, text='name2:')
		self.lb6 = tk.Label(self, height=1, width=40, text='token2:')
		self.txtw1 = tk.Text(self , height = 1 , width = 20) 
		self.txtw2 = tk.Text(self , height = 1 , width = 20)
		self.txtw3 = tk.Text(self , height = 1 , width = 20)
		self.txtw4 = tk.Text(self , height = 1 , width = 20)
		self.btn1 = tk.Button(self, height=2, width=20, text="看結果" , command = self.click_btn1)
		self.cvsMain = tk.Canvas(self , width = 100 , height = 80 , bg = 'white')
		
		
		self.lb1.grid(row=1, column=0, columnspan=1)
		self.lb2.grid(row=2, column=0, columnspan=1)
		self.lb3.grid(row=3, column=0, columnspan=1)
		self.lb4.grid(row=4, column=0, columnspan=1)
		self.lb5.grid(row=5, column=0, columnspan=1)
		self.lb6.grid(row=6, column=0, columnspan=1)
		self.txtw1.grid(row=2, column=1, columnspan=2) 
		self.txtw2.grid(row=3, column=1, columnspan=2)
		self.txtw3.grid(row=5, column=1, columnspan=2)
		self.txtw4.grid(row=6, column=1, columnspan=2)
		self.btn1.grid(row=1,rowspan=6, column=3,sticky=tk.N+tk.S)
		self.cvsMain.grid(row = 7 , columnspan = 4 , column = 0 , sticky = tk.NE + tk.SW)


	def click_btn1(self):
		pass 
		#看按完按鈕要幹嘛加你們的程式碼
		#可以寫成按完button後顯示在空的那個canvas上面

class Window(tk.Frame):
	def __init__(self):
		tk.Frame.__init__(self)
		self.grid()
		self.create_widgets()
	def create_widgets(self):
        
		self.lb1 = tk.Label(self, height=1, width=80, text=" ")
		self.lb2 = tk.Label(self, height=1, width=80, text=" ")
		self.lb3 = tk.Label(self, height=1, width=80, text=" ")
		self.lb4 = tk.Label(self, height=1, width=80, text=" ")
		self.lb5 = tk.Label(self, height=1, width=80, text=" ")
		self.lb6 = tk.Label(self, height=1, width=80, text=" ")
		self.lb7 = tk.Label(self, height=1, width=80, text=" ")
		self.btn1 = tk.Button(self, height=2, width=40, text="使用說明" , command = self.click_btn1)
		self.btn2 = tk.Button(self, height=2, width=40, text="開始使用" , command = self.click_btn2)
		
		self.lb1.grid(row=1, column=0, columnspan=4)
		self.lb2.grid(row=2, column=0, columnspan=4)
		self.lb3.grid(row=3, column=0, columnspan=4)
		self.lb4.grid(row=4, column=0, columnspan=4)
		self.lb5.grid(row=5, column=0, columnspan=4)
		self.lb6.grid(row=6, column=0, columnspan=4)
		self.lb7.grid(row=7, column=0, columnspan=4)
		self.btn1.grid(row=0, column=0)
		self.btn2.grid(row=0, column=2)
		
	def click_btn1(self):
		
		self.lb1.configure(text='1.上https://developers.facebook.com/docs/graph-api?locale=zh_TW 註冊                                                 ')
		self.lb2.configure(text='2.點擊上方「工具」選項，選取圖形API測試工具                                                                                                      ')
		self.lb3.configure(text='3.登入自己的FB帳號，進入自己的塗鴉牆，複製網址                                                                                                 ')
		self.lb4.configure(text='4.將剛才複製的網址貼到「取得權杖」，將以下選項打勾：user hommetown, user posts, user likes             ')
		self.lb5.configure(text='5.按「取得存取權杖」，跑出的一行字即為自己的access token                                                                             ')
		self.lb6.configure(text='6.點擊下方「提交」，出現id和name                                                                                                                           ')
		self.lb7.configure(text='祝您有好的使用體驗！                                                                                                                                                     ')
	
	def click_btn2(self):
		Begin()

		
mywindow = Window()
mywindow.master.title("my window")
mywindow.mainloop()



import requests
import json


def appenddata(d):
    """
    把使用者資料匯成一個list
    """
    if user_counter == 0:
        info["GUY1"].append(d)

    else:
        info["GUY2"].append(d)

def printer(y):
    for i in range(4):
        if i == 3:
            for t in range(len(info[y][3])):
                print(info[y][3][t]["name"], info[y][3][t]["created_time"])

        elif i == 2:
            for t in range(len(info[y][2])):
                if "message" in info[y][2][t]:
                    print(info[y][2][t]["message"], info[y][2][t]["created_time"])

        else:
            print(info[y][i])

    print("____________________________________________________________________________________________________________")

info = dict()
info["GUY1"] = []
info["GUY2"] = []
user_counter = 0

while user_counter <=1:
    """
	讓使用者input其id和access token
    """
    id = input("please enter your id").strip()   #輸入id
    access_token = input("please enter your access token") .strip()  #輸入access token 取得token 時須取得name hometown likes posts之權限
    url_model = "https://graph.facebook.com/v2.9/iidd?fields=xxxxx&access_token=" + access_token  #網址模板
    url = url_model.replace("iidd", id)   #網址
    fields = ["name","hometown", "posts","likes"]

    for f in fields:
        """
        爬下使用者的資料(包括 : 名子, 家鄉, 貼文內容, 按過讚的粉專)
        匯到 info 這個 dictionary
        兩個人的資料會分別匯到 GUY1 和 GUY2 兩個 list
        """	
        initial_url = url.replace("xxxxx", f)
        response = requests.get(initial_url)
        if f == "name" or f == "hometown":
            html = json.loads(response.text)
            if f in html:
                appenddata(html[f])
            else:
                appenddata("None")

        else:
            html = json.loads(response.text)
            page_counter = 0
            appenddata(html[f]["data"])

            while True:
                if page_counter < 1:
                    sub_url = html[f]["paging"]["next"]
                    response = requests.get(sub_url)
                    html = json.loads(response.text)
                    page_counter += 1

                    if "next" in html :
                        appenddata(html["data"])

                    else:
                        break


                elif page_counter >= 1:
                    sub_url = html["paging"]["next"]
                    response = requests.get(sub_url)
                    html = json.loads(response.text)
                    page_counter += 1

                    if "next" in html:
                        appenddata(html["data"])

                    else:
                        break


    user_counter += 1

printer("GUY1")
printer("GUY2")
print(info)
